name: Deploy to AWS EC2

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
  EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      # Build and push backend
      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/prompthub-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production

      # Build and push frontend
      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/prompthub-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production

      # Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ env.EC2_SSH_KEY }}
          port: 22
          timeout: 30s
          command_timeout: 10m
          script: |
            # Set environment variable for docker-compose
            export DOCKERHUB_USERNAME=${{ env.DOCKERHUB_USERNAME }}

            # Create necessary directories
            mkdir -p ~/prompthub/backend
            mkdir -p ~/prompthub/frontend

            # Stop and remove existing containers
            cd ~/prompthub
            docker-compose -f docker-compose.prod.yml down || true

            # Login to Docker Hub
            echo "${{ env.DOCKERHUB_TOKEN }}" | docker login -u "${{ env.DOCKERHUB_USERNAME }}" --password-stdin

            # Pull the latest images
            docker pull ${{ env.DOCKERHUB_USERNAME }}/prompthub-backend:latest
            docker pull ${{ env.DOCKERHUB_USERNAME }}/prompthub-frontend:latest

            # Create .env files if they don't exist
            touch ~/prompthub/backend/.env.production
            touch ~/prompthub/frontend/.env.production

            # Copy necessary files
            echo "Copying configuration files..."
            # Backend .env.production
            cat << 'EOF' > ~/prompthub/backend/.env.production
            ${{ secrets.BACKEND_ENV }}
            EOF

            # Frontend .env.production
            cat << 'EOF' > ~/prompthub/frontend/.env.production
            ${{ secrets.FRONTEND_ENV }}
            EOF


            # Start the services
            docker-compose -f docker-compose.prod.yml up -d

            # Ensure nginx is running on host system
            sudo systemctl restart nginx
            sudo systemctl status nginx

            # Clean up unused images
            docker image prune -f

            echo "Deployment completed successfully!"
